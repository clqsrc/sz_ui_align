# native compiler windows amd64

#GOROOT=c:\go
#GOROOT=D:\go1.10.8.windows-amd64\go
GOROOT=D:\go1.18.3.windows-amd64\go

# 这个参数很重要，不是跟 go 版本一致，而是和代码所在的路径一致！ 否则是会编译失败的
GOPATH=D:\gopath1.10.8

#GOPATH=D:\gopath1.18.3
#GOBIN=
GOARCH=amd64
GOOS=windows
CGO_ENABLED=1

#PATH=c:\mingw64\bin;%GOROOT%\bin;%PATH%
#PATH=D:\new\tdm-gcc-64-5.1.0-2\gdb64\bin;%GOROOT%\bin;%PATH% # gdb64 不行 
PATH=D:\new\mingw64-8.1.0-sjlj\mingw64\bin;%GOROOT%\bin;%PATH%

#//GO111MODULE 在 1.18.3 这样的版本中一定要配合正确的 GOPATH 才能正常工作
#go 1.18.3 下也还是可以用的. 有了这个变量定义 1.18.3 或者说 1.10.8 之后的版本才会去找项目自身下的 vendor 目录
#因为 gomod 目前已知是一定要找 gopath 然后在下面生成一个 pkg 目前的，不利于不同项目分别备份代码，所以还是用 vendor
#比较简单。要特别注意的是，开启 gomod 的情况下，是不推荐手改 vendor 下的代码的，因为 gomod 会下载全新代码覆盖它!
GO111MODULE=off



#LITEIDE_GDB=gdb64
LITEIDE_GDB=gdb
LITEIDE_MAKE=mingw32-make
LITEIDE_TERM=%COMSPEC%
LITEIDE_TERMARGS=
LITEIDE_EXEC=%COMSPEC%
LITEIDE_EXECOPT=/C
