

https://www.zhihu.com/question/20849824

说个简单的方法，如果你的markdown(md)文件使用chrome预览，就比较简单了。

点打印，目标，选本地另存为pdf，即可。看图：

这样保存的PDF非常完美，基本上你在chrome里预览是什么格式，保存完就是什么格式。

这里要注意的是，如果导出 pdf 对话框中是微软 pdf 打印机这样的话效果是不太行的，比如没有跳转链接，要切换成 chrome 自己的 pdf 打印机。


//--------------------------------------------------------
# <center>跨平台框架开发文档</center>

# a1

//typora支持， vscode-Markdown TOC插件支持（vscode原生Markdown不支持）
@[toc](目录)//小括号里的名字可以自己设置
# 我是一级标题
//文章内容
## 我是二级标题
//文章内容
## 我是二级标题
//文章内容
# 我是一级标题
//文章内容
## 我是二级标题
//文章内容
### 我是三级标题
//文章内容

//这个是 markdown 的方法，要对准标题，如果是翻译后的就不行了，而且对小数点、空格的写法兼容性很差（比如空格要转换成“-”在有些预览中就不生效）。
[目录名](#-2通用的属性值)

//通用性比较好的方法，而且用 chrome 生成 pdf 后链接依然生效。
[目录名2](#a2)

UiAlign 原用于解决 ios 中令人头痛的控件对齐问题，如今它使用简单明晰的对齐方式来支持 ios, android, 甚至 windows 的 ui 开发。

### What's the difference from other frameworks?

UiAlign 与其他跨平台框架的最大区别是并未整个颠覆原生代码的开发方式，相反它与原生代码有良好的沟通渠道使之具有与原生代码程序一样的适用范围。本质上 UiAlign 其实是一个 ui 控件的管理组件，利用各平台都支持的 C 语言接口，再借助 LUA 开发语言，它成为了一个完整的跨平台的程序开发框架。实际上 LUA 语言并不是 UiAlign 唯一的开发语言，我们强烈推荐大家在需要的地方使用 C ，以及自己使用原生代码开发出更适合自己的组件。

具体可查看技术实现说明文档。

### 1.每个页面由两个文件组成

UiAlign 和 vue 一样本质上是单页面应用：在一个原生控件中显示不同的面板控件来形成多页面。当然您熟悉了它之后也可以用于多原生页面的环境。出于方便大家开发的角度，我们主要说明单原生原生页面的情况。

一个 UiAlign 推荐由一个 json 文件和一个 lua(或 C) 文件组成。其中 json 表示界面，而 lua(C) 则为该页面的逻辑代码。
json 文件中看似复杂，其实只是保存了各个 ui 控件间的层次关系，以用它自身的属性值而已。在代码中我们通常表示为 uijson ，所以大家会在示例代码中看到它的大量调用。

控件的属性值，我们一直在扩展，这部分将来可能会多次变动，因此请大家注意。不过一般情况下是新增，尽量不去改动原有的属性名和它代表的含义（不过这种情况也是会存在的）。


### 2.通用的属性值<span id="a2"></span>

UiAlign 本质上是很简单的，基本上就是参考 Delphi 和 H5 的 ui 组件对齐方式来自动控制控件的位置。对于一些复杂的布局，实际上我们推荐大家自己在代码中完成，也写有很多实例供大家参考（大家会看到其实并不难）。所以 UiAlign 本身的布局代码是非常简洁明晰的。核心代码的简单也使得 UiAlign 在各个原生环境下的移植相当的简单。

因此 UiAlign 中最常用的属性就是控件位置相关的部分。

UiAlign 和微信小程序相似，主要界面元素都来自一个类似于 H5 中的 Div 这样的基础面板控件，我们在 UiAlign 也直接叫它做“标准 DIV”，要注意的是它在 js 环境中并不直接等于原始的 div ，不过也只是扩展了原始 div 的一些属性，并没有推倒全部重来。

这些属性值是用在 json 布局文件中的，在代码中如何设置，请看第 3 节部分。

#### 2.1 位置

* left

控件位置的左属性，定义控件距离父控件的左边距离。

* top

控件位置的顶部距离属性，定义控件距离父控件的顶边距离。

* width

控件的宽度。

* height

控件的高度。

* <b> 以上是一个控件最基本位置属性，其他对齐等都是围绕都它们来进行的，在有对齐属性的情况下它们的值是动态的。其实对齐本质上就是在 onsize 事件中动态修改它们的值。不过它们并不完全等同于原生代码中的相应值，比如在 ios 中如果直接对应 frame 中的相应数值的话，在旋转动画时是会控件错位的，因此我们做了一些封装，让这 4 个数值一直保持正确。</b>

* <b> 这些位置数值的单位都是 dp ， 这是安卓的术语。实际上就是逻辑像素单位，在安卓中一个 dp 一般对应 2 或者 3 个像素，甚至更多。在 ios 中是不能直接操作物理像素值的，所以它就直接是 ios 的“像素值”（即逻辑像素值）。在 H5 环境下一般等同于 px ，根据不同的页面配置实际上它就是逻辑像素。在高分辨显示器下的 windows 中，它也等于换算后的逻辑像素，而不是物理像素，比如在 4k 显示器下它一般等于两个物理像素。</b>

#### 2.2 对齐

对齐就是自动调整控件的位置以对齐到其他控件，我们尝试过可以对齐到不同层级的控件。不过最后发现实际上只要实际与父控件的对齐关系就可以了。更复杂的控制方式一样可以在 onsize 事件中手写一小段代码辅助即可。

* alignLeft, ui_marginLeft

左边是否对齐到父控件，间隔多少。

* alignRight, ui_marginRight

右边是否对齐到父控件，间隔多少。

* alignTop, ui_marginTop

顶部是否对齐到父控件，间隔多少。

* alignBottom, ui_marginBottom

底部是否对齐到父控件，间隔多少。


#### 2.3 其他

以下这些属性标准面板和大多数控件是支持的，但也不是全部。

* raw_background-color

背景色。因为历史的原因，这个属性的名称有点怪异，主要因为我们最初决定使用 H5 做一个简单版本的设计器，其中的基础控件面板就是对应的 DIV ，而 DIV 已经有一人属性叫 background-color 了。而我们的属性值又和 H5 的 background-color 并不完全一样。

这个值的写法支持普通的 #001122 这样的 rgb 形式，也支持 #0011223344 这样的 argb 格式。

* caption

标题。标准控件面板（“标准 DIV”）在原生代码中一般是没有这个属性的，不过在开发中我们发现非常常用，而且还不好实现。所以标配了一个，可以减少大量的代码或是适配工作。并且这个标题是默认上下居中和左右居中的。一般情况下最好只使用单行文本，多行文本的情况未详细在各个平台下测试。

* text_color

标题的文字颜色。取值形式与背景色相同。

* text_left

标题文字是否靠左。默认是居中对齐的。按道理还应该有右对齐属性，不过目前未实现。

* ui_fontSize 

同样为避免 js 同名，所以名称略奇怪。这个表示标题的文字大小，单位基本上也可以理解为逻辑像素，不过实际上不是。默认值应该是 14 ，不过要设置为默认字体大小的话最好是留空，要比默认值小一点推荐 12，其他推荐值为 18，24 。有这几个值基本满足开发的需要了。

* border-radius

圆角半径。注意，这个的实现在 android 下和 ios 下略有差异，测试时应当在两个平台下分别对比测试。主要表现为设置过大时 ios 会取一个合适的值，而 android 会硬写进去，出来的效果会比较怪异。单位也是逻辑像素。

### 3.常用控件和它们的属性值

UiAlign 和 H5 一样，可以用“标准 DIV”实现出很多效果的其他控件出来。不过有些控件还是必须由标准原生控件来实现的，比如文字输入框。

* ui_class

这个属性值表明它是什么控件，如果是“标准 DIV”这个属性值则为空。

目前有以下几种值对应不同的控件:
edit 编辑框，image 图片面板，scroll_panel 滚动面板, memo_readonly 多行只读文本控件。其实还有一些控件，不过还未在多平台下统一实现。





