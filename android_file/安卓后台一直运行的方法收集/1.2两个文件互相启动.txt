

//3 启动Service //
    //public void startService(View view)
    public void startService()
    {
        Intent intent=new Intent(this, AlarmService.class);
        startService(intent);
    }//




package com.java.gpssend;

//public class AlarmService {
//}

//https://www.yisu.com/zixun/204828.html
//用两个类来互相启动

import android.app.AlarmManager;
import android.app.PendingIntent;
import android.app.Service;
import android.content.Intent;
import android.os.IBinder;
import android.os.SystemClock;

import static android.content.Context.ALARM_SERVICE;

/**
 * 一个定时任务
 */

public class AlarmService extends Service {


    /**
     * 每1分钟更新一次数据
     */
    //private static final int ONE_Miniute=60*1000;
    private static final int ONE_Miniute=6*1000;
    private static final int PENDING_REQUEST=0;

    public AlarmService() {
    }

    /**
     * 调用Service都会执行到该方法
     */
    @Override
    public int onStartCommand(Intent intent, int flags, int startId) {

        //这里模拟后台操作
        new Thread(new Runnable() {
            @Override
            public void run() {
                //Log.e("wj","循环执行了，哈哈."+ System.currentTimeMillis());

                //Functions.ShowMessage("循环执行了，哈哈."); //线程中是显示不出来的

                //Functions.LastActivity.runOnUiThread(new Runnable() {
                //    @Override
                //    public void run() {
                //        //tv.setText("Hello");
                //        Functions.ShowMessage("循环执行了，哈哈.");
                //    }
                //});

                Functions.ShowMessage_inThread("循环执行了，哈哈.");

                gps.GetLastKnownLocation();

            }
        }).start();

        //----
        //在通知栏显示，以便判断是否在运行  //据说现在是不允许在服务中打开 activ 的，要通过通知栏通知间接打开
        notify.Setup(this);

        //----

        //通过 AlarmManager 定时启动广播 //算出闹钟时间设置为到那个时间后启动 AlarmReceive 广播接收器
        AlarmManager alarmManager = (AlarmManager) getSystemService(ALARM_SERVICE);
        long triggerAtTime = SystemClock.elapsedRealtime() + ONE_Miniute; //从开机到现在的毫秒数（手机睡眠(sleep)的时间也包括在内
        Intent i = new Intent(this, AlarmReceive.class);
        //PendingIntent pIntent = PendingIntent.getBroadcast(this,PENDING_REQUEST,i, PENDING_REQUEST);
        PendingIntent pIntent = PendingIntent.getBroadcast(this,PENDING_REQUEST,i, PendingIntent.FLAG_UPDATE_CURRENT);
        alarmManager.set(AlarmManager.ELAPSED_REALTIME_WAKEUP,triggerAtTime,pIntent);



        //--------------------------------------------------------

        return super.onStartCommand(intent, flags, startId);
    }//

    @Override
    public IBinder onBind(Intent intent) {
        // TODO: Return the communication channel to the service.
        throw new UnsupportedOperationException("Not yet implemented");
    }
}



